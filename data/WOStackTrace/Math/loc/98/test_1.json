{
    "bug_id": 98,
    "test_id": 1,
    "test_name": "org.apache.commons.math.linear.RealMatrixImplTest.testMath209",
    "test_body": "public void testMath209() {\nRealMatrix a = new RealMatrixImpl(new double[][] {\n{ 1, 2 }, { 3, 4 }, { 5, 6 }\n}, false);\ndouble[] b = a.operate(new double[] { 1, 1 });\nassertEquals(a.getRowDimension(), b.length);\nassertEquals( 3.0, b[0], 1.0e-12);\nassertEquals( 7.0, b[1], 1.0e-12);\nassertEquals(11.0, b[2], 1.0e-12);\n}\n",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 2\nat org.apache.commons.math.linear.RealMatrixImpl.operate(RealMatrixImpl.java:786)\nat org.apache.commons.math.linear.RealMatrixImplTest.testMath209(RealMatrixImplTest.java:351)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.linear.RealMatrixImpl:<init>([[DZ)V",
            "method_body": "public RealMatrixImpl(double[][] d, boolean copyArray) {\nif (copyArray) {\ncopyIn(d);\n} else {\nif (d == null) {\nthrow new NullPointerException();\n}\nfinal int nRows = d.length;\nif (nRows == 0) {\nthrow new IllegalArgumentException(\"Matrix must have at least one row.\");\n}\nfinal int nCols = d[0].length;\nif (nCols == 0) {\nthrow new IllegalArgumentException(\"Matrix must have at least one column.\");\n}\nfor (int r = 1; r < nRows; r++) {\nif (d[r].length != nCols) {\nthrow new IllegalArgumentException(\"All input rows must have the same length.\");\n}\n}\ndata = d;\n}\nlu = null;\n}",
            "method_id": 0,
            "loc": 24
        },
        {
            "method_signature": "org.apache.commons.math.linear.RealMatrixImpl:operate([D)[D",
            "method_body": "public double[] operate(double[] v) throws IllegalArgumentException {\nfinal int nRows = this.getRowDimension();\nfinal int nCols = this.getColumnDimension();\nif (v.length != nCols) {\nthrow new IllegalArgumentException(\"vector has wrong length\");\n}\nfinal double[] out = new double[v.length];\nfor (int row = 0; row < nRows; row++) {\nfinal double[] dataRow = data[row];\ndouble sum = 0;\nfor (int i = 0; i < nCols; i++) {\nsum += dataRow[i] * v[i];\n}\nout[row] = sum;\n}\nreturn out;\n}",
            "method_id": 1,
            "loc": 17
        },
        {
            "method_signature": "org.apache.commons.math.linear.RealMatrixImpl:getColumnDimension()I",
            "method_body": "public int getColumnDimension() {\nreturn data[0].length;\n}",
            "method_id": 2,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.math.linear.RealMatrixImpl:getRowDimension()I",
            "method_body": "public int getRowDimension() {\nreturn data.length;\n}",
            "method_id": 3,
            "loc": 3
        }
    ]
}