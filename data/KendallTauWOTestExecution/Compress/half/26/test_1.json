{
    "bug_id": 26,
    "test_id": 1,
    "test_name": "org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead",
    "test_body": "public void skipUsingRead() throws Exception {\nskip(new StreamWrapper() {\npublic InputStream wrap(InputStream toWrap) {\nreturn new FilterInputStream(toWrap) {\npublic long skip(long s) {\nreturn 0;\n}\n};\n}\n});\n}\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.compress.utils.IOUtils:skip(Ljava/io/InputStream;J)J",
            "method_body": "public static long skip(InputStream input, long numToSkip) throws IOException {\nlong available = numToSkip;\nwhile (numToSkip > 0) {\nlong skipped = input.skip(numToSkip);\nif (skipped == 0) {\nbreak;\n}\nnumToSkip -= skipped;\n}\n\nreturn available - numToSkip;\n}",
            "method_id": 0
        }
    ]
}