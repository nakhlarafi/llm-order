{
    "Cli": {
        "29": [],
        "15": [
            {
                "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)Ljava/util/List;",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "14": [],
        "28": [],
        "16": [],
        "17": [],
        "13": [],
        "12": [],
        "10": [
            {
                "method_signature": "org.apache.commons.cli.Parser:setOptions(Lorg/apache/commons/cli/Options;)V",
                "type": "setter",
                "lines_of_code": 4
            }
        ],
        "38": [
            {
                "method_signature": "org.apache.commons.cli.DefaultParser:isShortOption(Ljava/lang/String;)Z",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "39": [],
        "11": [],
        "9": [],
        "8": [],
        "5": [],
        "4": [],
        "40": [],
        "7": [],
        "3": [],
        "2": [],
        "1": [
            {
                "method_signature": "org.apache.commons.cli.CommandLine:hasOption(Ljava/lang/String;)Z",
                "type": "getter",
                "lines_of_code": 3
            },
            {
                "method_signature": "org.apache.commons.cli.CommandLine:getOptionValues(Ljava/lang/String;)[Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "34": [],
        "20": [],
        "21": [],
        "35": [
            {
                "method_signature": "org.apache.commons.cli.Options:getMatchingOptions(Ljava/lang/String;)Ljava/util/List;",
                "type": "getter",
                "lines_of_code": 9
            }
        ],
        "23": [],
        "37": [
            {
                "method_signature": "org.apache.commons.cli.DefaultParser:isShortOption(Ljava/lang/String;)Z",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "36": [],
        "22": [],
        "26": [],
        "32": [],
        "33": [],
        "27": [
            {
                "method_signature": "org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V",
                "type": "setter",
                "lines_of_code": 7
            }
        ],
        "31": [],
        "25": [],
        "19": [],
        "18": [],
        "24": [],
        "30": []
    },
    "Math": {
        "29": [],
        "15": [],
        "100": [
            {
                "method_signature": "org.apache.commons.math.estimation.AbstractEstimator:getCovariances(Lorg/apache/commons/math/estimation/EstimationProblem;)[[D",
                "type": "getter",
                "lines_of_code": 12
            }
        ],
        "101": [],
        "14": [],
        "28": [
            {
                "method_signature": "org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;",
                "type": "getter",
                "lines_of_code": 36
            }
        ],
        "16": [],
        "103": [],
        "102": [],
        "17": [],
        "13": [],
        "106": [],
        "12": [],
        "10": [],
        "38": [],
        "105": [
            {
                "method_signature": "org.apache.commons.math.stat.regression.SimpleRegression:getSumSquaredErrors()D",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "104": [],
        "39": [],
        "11": [],
        "76": [
            {
                "method_signature": "org.apache.commons.math.linear.SingularValueDecompositionImpl:getU()Lorg/apache/commons/math/linear/RealMatrix;",
                "type": "getter",
                "lines_of_code": 24
            },
            {
                "method_signature": "org.apache.commons.math.linear.SingularValueDecompositionImpl:getV()Lorg/apache/commons/math/linear/RealMatrix;",
                "type": "getter",
                "lines_of_code": 9
            }
        ],
        "62": [],
        "89": [],
        "88": [
            {
                "method_signature": "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair;",
                "type": "getter",
                "lines_of_code": 13
            }
        ],
        "63": [],
        "77": [
            {
                "method_signature": "org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D",
                "type": "getter",
                "lines_of_code": 6
            },
            {
                "method_signature": "org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "49": [],
        "61": [],
        "75": [
            {
                "method_signature": "org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "74": [],
        "60": [],
        "48": [],
        "64": [],
        "70": [],
        "58": [],
        "59": [],
        "71": [],
        "65": [
            {
                "method_signature": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getRMS()D",
                "type": "getter",
                "lines_of_code": 7
            },
            {
                "method_signature": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getChiSquare()D",
                "type": "getter",
                "lines_of_code": 7
            }
        ],
        "73": [],
        "67": [
            {
                "method_signature": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getResult()D",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "9": [],
        "98": [],
        "99": [],
        "8": [],
        "66": [],
        "72": [],
        "57": [],
        "5": [],
        "43": [],
        "94": [],
        "80": [],
        "81": [],
        "95": [
            {
                "method_signature": "org.apache.commons.math.distribution.FDistributionImpl:getInitialDomain(D)D",
                "type": "getter",
                "lines_of_code": 5
            }
        ],
        "42": [
            {
                "method_signature": "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair;",
                "type": "getter",
                "lines_of_code": 15
            }
        ],
        "56": [
            {
                "method_signature": "org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I",
                "type": "getter",
                "lines_of_code": 21
            }
        ],
        "4": [],
        "68": [],
        "40": [],
        "6": [],
        "54": [],
        "83": [
            {
                "method_signature": "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow(IZ)Ljava/lang/Integer;",
                "type": "getter",
                "lines_of_code": 10
            },
            {
                "method_signature": "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair;",
                "type": "getter",
                "lines_of_code": 13
            }
        ],
        "97": [],
        "96": [],
        "82": [
            {
                "method_signature": "org.apache.commons.math.optimization.linear.SimplexSolver:getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;",
                "type": "getter",
                "lines_of_code": 13
            }
        ],
        "7": [],
        "55": [],
        "41": [],
        "69": [
            {
                "method_signature": "org.apache.commons.math.stat.correlation.PearsonsCorrelation:getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;",
                "type": "getter",
                "lines_of_code": 13
            }
        ],
        "45": [],
        "51": [],
        "3": [],
        "79": [],
        "86": [],
        "92": [],
        "93": [],
        "87": [
            {
                "method_signature": "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow(I)Ljava/lang/Integer;",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "78": [],
        "50": [],
        "2": [
            {
                "method_signature": "org.apache.commons.math3.distribution.HypergeometricDistribution:getNumericalMean()D",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "44": [],
        "52": [],
        "46": [],
        "91": [],
        "85": [],
        "84": [],
        "90": [],
        "47": [],
        "1": [],
        "53": [],
        "34": [],
        "20": [],
        "21": [],
        "35": [],
        "23": [],
        "37": [],
        "36": [],
        "22": [
            {
                "method_signature": "org.apache.commons.math3.distribution.UniformRealDistribution:isSupportUpperBoundInclusive()Z",
                "type": "getter",
                "lines_of_code": 3
            },
            {
                "method_signature": "org.apache.commons.math3.distribution.FDistribution:isSupportLowerBoundInclusive()Z",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "26": [],
        "32": [],
        "33": [],
        "27": [],
        "31": [],
        "25": [],
        "19": [],
        "18": [],
        "24": [],
        "30": []
    },
    "Csv": {
        "15": [],
        "14": [],
        "16": [],
        "13": [],
        "12": [],
        "10": [],
        "11": [],
        "9": [],
        "8": [],
        "5": [],
        "4": [
            {
                "method_signature": "org.apache.commons.csv.CSVParser:getHeaderMap()Ljava/util/Map;",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "6": [],
        "7": [],
        "3": [],
        "2": [
            {
                "method_signature": "org.apache.commons.csv.CSVRecord:get(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 5
            }
        ],
        "1": []
    },
    "Codec": {
        "15": [
            {
                "method_signature": "org.apache.commons.codec.language.Soundex:getMappingCode(Ljava/lang/String;I)C",
                "type": "getter",
                "lines_of_code": 11
            }
        ],
        "14": [],
        "16": [],
        "17": [],
        "13": [
            {
                "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "12": [],
        "10": [],
        "11": [],
        "9": [],
        "8": [
            {
                "method_signature": "org.apache.commons.codec.binary.Base64:setInitialBuffer([BII)V",
                "type": "setter",
                "lines_of_code": 6
            }
        ],
        "5": [],
        "4": [],
        "6": [],
        "7": [],
        "3": [],
        "2": [],
        "1": [],
        "18": []
    },
    "Gson": {
        "15": [],
        "14": [],
        "16": [],
        "17": [],
        "13": [],
        "12": [],
        "10": [],
        "11": [],
        "9": [],
        "8": [],
        "5": [],
        "4": [],
        "6": [
            {
                "method_signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:getTypeAdapter(Lcom/google/gson/internal/ConstructorConstructor;Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;Lcom/google/gson/annotations/JsonAdapter;)Lcom/google/gson/TypeAdapter;",
                "type": "getter",
                "lines_of_code": 9
            }
        ],
        "7": [],
        "3": [],
        "2": [],
        "1": [
            {
                "method_signature": "com.google.gson.TypeInfoFactory:getActualType(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "18": [
            {
                "method_signature": "com.google.gson.internal.$Gson$Types:getSupertype(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;",
                "type": "getter",
                "lines_of_code": 4
            }
        ]
    },
    "JacksonCore": {
        "15": [],
        "14": [],
        "16": [],
        "17": [],
        "13": [],
        "12": [
            {
                "method_signature": "com.fasterxml.jackson.core.json.ReaderBasedJsonParser:getTokenLocation()Lcom/fasterxml/jackson/core/JsonLocation;",
                "type": "getter",
                "lines_of_code": 4
            }
        ],
        "10": [],
        "11": [],
        "9": [
            {
                "method_signature": "com.fasterxml.jackson.core.base.ParserMinimalBase:getValueAsString(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 5
            },
            {
                "method_signature": "com.fasterxml.jackson.core.json.ReaderBasedJsonParser:getValueAsString()Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 4
            },
            {
                "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:getValueAsString()Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 4
            }
        ],
        "8": [
            {
                "method_signature": "com.fasterxml.jackson.core.util.TextBuffer:getTextBuffer()[C",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "5": [],
        "4": [],
        "6": [],
        "7": [],
        "3": [],
        "2": [],
        "1": [],
        "20": [],
        "21": [],
        "23": [],
        "22": [],
        "26": [],
        "25": [],
        "19": [],
        "18": [],
        "24": []
    },
    "JacksonXml": {
        "5": [],
        "4": [],
        "6": [],
        "3": [],
        "2": [],
        "1": []
    },
    "Mockito": {
        "29": [],
        "15": [],
        "14": [],
        "28": [],
        "16": [],
        "17": [],
        "13": [],
        "12": [
            {
                "method_signature": "org.mockito.internal.util.reflection.GenericMaster:getGenericType(Ljava/lang/reflect/Field;)Ljava/lang/Class;",
                "type": "getter",
                "lines_of_code": 7
            }
        ],
        "10": [],
        "38": [],
        "11": [],
        "9": [],
        "8": [],
        "5": [],
        "4": [],
        "6": [],
        "7": [],
        "3": [],
        "2": [],
        "1": [],
        "34": [],
        "20": [],
        "21": [],
        "35": [
            {
                "method_signature": "org.mockito.Matchers:isA(Ljava/lang/Class;)Ljava/lang/Object;",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "23": [],
        "37": [],
        "36": [],
        "22": [],
        "26": [],
        "32": [],
        "33": [
            {
                "method_signature": "org.mockito.internal.invocation.InvocationMatcher:hasSameMethod(Lorg/mockito/internal/invocation/Invocation;)Z",
                "type": "getter",
                "lines_of_code": 5
            }
        ],
        "27": [],
        "31": [],
        "25": [
            {
                "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs:getMock(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "19": [],
        "18": [],
        "24": [],
        "30": []
    },
    "Compress": {
        "29": [],
        "15": [],
        "14": [],
        "28": [],
        "16": [],
        "17": [],
        "13": [
            {
                "method_signature": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:setName(Ljava/lang/String;)V",
                "type": "setter",
                "lines_of_code": 3
            }
        ],
        "12": [
            {
                "method_signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;",
                "type": "getter",
                "lines_of_code": 7
            }
        ],
        "10": [],
        "38": [
            {
                "method_signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry:isDirectory()Z",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "39": [],
        "11": [],
        "9": [],
        "8": [],
        "5": [],
        "43": [],
        "42": [
            {
                "method_signature": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:isUnixSymlink()Z",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "4": [],
        "40": [],
        "6": [],
        "7": [],
        "41": [
            {
                "method_signature": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;",
                "type": "getter",
                "lines_of_code": 52
            }
        ],
        "45": [],
        "3": [],
        "2": [
            {
                "method_signature": "org.apache.commons.compress.archivers.ar.ArArchiveInputStream:getNextArEntry()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;",
                "type": "getter",
                "lines_of_code": 31
            }
        ],
        "44": [],
        "46": [],
        "47": [],
        "1": [],
        "34": [
            {
                "method_signature": "org.apache.commons.compress.archivers.zip.X7875_NewUnix:getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "20": [],
        "21": [],
        "35": [],
        "23": [],
        "37": [],
        "36": [
            {
                "method_signature": "org.apache.commons.compress.archivers.sevenz.SevenZFile:getCurrentStream()Ljava/io/InputStream;",
                "type": "getter",
                "lines_of_code": 10
            }
        ],
        "22": [
            {
                "method_signature": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:setupNoRandPartA()I",
                "type": "setter",
                "lines_of_code": 15
            }
        ],
        "26": [],
        "32": [],
        "33": [],
        "27": [],
        "31": [],
        "25": [],
        "19": [],
        "18": [],
        "24": [],
        "30": []
    },
    "Jsoup": {
        "29": [],
        "15": [],
        "14": [],
        "28": [],
        "16": [],
        "17": [],
        "12": [],
        "10": [],
        "38": [],
        "39": [],
        "11": [],
        "76": [],
        "62": [],
        "89": [
            {
                "method_signature": "org.jsoup.nodes.Attribute:setValue(Ljava/lang/String;)Ljava/lang/String;",
                "type": "setter",
                "lines_of_code": 3
            }
        ],
        "88": [
            {
                "method_signature": "org.jsoup.nodes.Attribute:getValue()Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "63": [],
        "77": [],
        "49": [],
        "61": [
            {
                "method_signature": "org.jsoup.nodes.Element:hasClass(Ljava/lang/String;)Z",
                "type": "getter",
                "lines_of_code": 18
            }
        ],
        "75": [],
        "74": [],
        "60": [],
        "48": [],
        "64": [],
        "70": [],
        "58": [
            {
                "method_signature": "org.jsoup.Jsoup:isValid(Ljava/lang/String;Lorg/jsoup/safety/Whitelist;)Z",
                "type": "getter",
                "lines_of_code": 3
            },
            {
                "method_signature": "org.jsoup.safety.Cleaner:isValid(Lorg/jsoup/nodes/Document;)Z",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "59": [],
        "71": [],
        "65": [],
        "73": [],
        "67": [],
        "9": [],
        "8": [],
        "66": [],
        "72": [],
        "57": [],
        "5": [],
        "43": [],
        "80": [],
        "81": [],
        "42": [],
        "56": [],
        "4": [],
        "68": [],
        "40": [],
        "6": [],
        "54": [],
        "83": [],
        "82": [],
        "7": [],
        "55": [],
        "41": [],
        "69": [],
        "45": [],
        "51": [],
        "3": [
            {
                "method_signature": "org.jsoup.parser.Tag:isValidParent(Lorg/jsoup/parser/Tag;)Z",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "79": [],
        "86": [],
        "92": [],
        "93": [],
        "87": [
            {
                "method_signature": "org.jsoup.parser.HtmlTreeBuilder:isSameFormattingElement(Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)Z",
                "type": "getter",
                "lines_of_code": 3
            },
            {
                "method_signature": "org.jsoup.parser.HtmlTreeBuilder:getActiveFormattingElement(Ljava/lang/String;)Lorg/jsoup/nodes/Element;",
                "type": "getter",
                "lines_of_code": 7
            }
        ],
        "78": [],
        "50": [],
        "2": [],
        "44": [],
        "52": [
            {
                "method_signature": "org.jsoup.nodes.XmlDeclaration:getWholeDeclaration()Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 13
            }
        ],
        "46": [],
        "91": [],
        "85": [],
        "84": [],
        "90": [],
        "47": [],
        "1": [],
        "53": [],
        "34": [],
        "20": [],
        "21": [],
        "35": [],
        "23": [],
        "37": [],
        "36": [
            {
                "method_signature": "org.jsoup.helper.DataUtil:getCharsetFromContentType(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 10
            }
        ],
        "22": [],
        "26": [],
        "32": [],
        "33": [],
        "27": [
            {
                "method_signature": "org.jsoup.helper.DataUtil:getCharsetFromContentType(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "31": [],
        "25": [],
        "19": [],
        "18": [],
        "24": [],
        "30": []
    },
    "Lang": {
        "29": [],
        "15": [
            {
                "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/ParameterizedType;Ljava/util/Map;)Z",
                "type": "getter",
                "lines_of_code": 19
            },
            {
                "method_signature": "org.apache.commons.lang3.reflect.TypeUtils:getTypeArguments(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;",
                "type": "getter",
                "lines_of_code": 10
            }
        ],
        "14": [],
        "28": [],
        "16": [],
        "17": [],
        "13": [],
        "12": [],
        "10": [],
        "38": [],
        "39": [],
        "11": [],
        "62": [],
        "63": [],
        "49": [],
        "61": [],
        "60": [],
        "48": [],
        "64": [],
        "58": [],
        "59": [],
        "65": [],
        "9": [],
        "8": [],
        "57": [
            {
                "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "5": [],
        "43": [],
        "42": [],
        "56": [],
        "4": [],
        "40": [],
        "6": [],
        "54": [],
        "7": [],
        "55": [],
        "41": [
            {
                "method_signature": "org.apache.commons.lang.ClassUtils:getShortClassName(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 10
            },
            {
                "method_signature": "org.apache.commons.lang.ClassUtils:getPackageName(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 6
            }
        ],
        "45": [],
        "51": [],
        "3": [],
        "50": [
            {
                "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                "type": "getter",
                "lines_of_code": 16
            },
            {
                "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateTimeInstance(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
                "type": "getter",
                "lines_of_code": 16
            }
        ],
        "44": [],
        "52": [],
        "46": [],
        "47": [],
        "1": [],
        "53": [],
        "34": [
            {
                "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
                "type": "getter",
                "lines_of_code": 3
            },
            {
                "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isRegistered(Ljava/lang/Object;)Z",
                "type": "getter",
                "lines_of_code": 4
            }
        ],
        "20": [],
        "21": [
            {
                "method_signature": "org.apache.commons.lang3.time.DateUtils:isSameLocalTime(Ljava/util/Calendar;Ljava/util/Calendar;)Z",
                "type": "getter",
                "lines_of_code": 4
            }
        ],
        "35": [],
        "23": [],
        "37": [],
        "36": [
            {
                "method_signature": "org.apache.commons.lang3.math.NumberUtils:isNumber(Ljava/lang/String;)Z",
                "type": "getter",
                "lines_of_code": 51
            }
        ],
        "22": [],
        "26": [],
        "32": [
            {
                "method_signature": "org.apache.commons.lang3.builder.HashCodeBuilder:isRegistered(Ljava/lang/Object;)Z",
                "type": "getter",
                "lines_of_code": 3
            }
        ],
        "33": [],
        "27": [],
        "31": [],
        "25": [],
        "19": [],
        "18": [],
        "24": [
            {
                "method_signature": "org.apache.commons.lang3.math.NumberUtils:isNumber(Ljava/lang/String;)Z",
                "type": "getter",
                "lines_of_code": 54
            }
        ],
        "30": []
    },
    "Time": {
        "15": [],
        "14": [],
        "16": [],
        "17": [],
        "13": [],
        "12": [],
        "10": [],
        "11": [],
        "9": [],
        "8": [],
        "5": [],
        "4": [],
        "6": [
            {
                "method_signature": "org.joda.time.chrono.GJChronology:getInstance(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;",
                "type": "getter",
                "lines_of_code": 16
            }
        ],
        "7": [],
        "3": [],
        "2": [],
        "1": [],
        "20": [],
        "23": [
            {
                "method_signature": "org.joda.time.DateTimeZone:getConvertedId(Ljava/lang/String;)Ljava/lang/String;",
                "type": "getter",
                "lines_of_code": 5
            }
        ],
        "22": [],
        "26": [
            {
                "method_signature": "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:set(JI)J",
                "type": "setter",
                "lines_of_code": 7
            }
        ],
        "27": [],
        "25": [
            {
                "method_signature": "org.joda.time.DateTimeZone:getOffsetFromLocal(J)I",
                "type": "getter",
                "lines_of_code": 11
            }
        ],
        "19": [
            {
                "method_signature": "org.joda.time.DateTimeZone:getOffsetFromLocal(J)I",
                "type": "getter",
                "lines_of_code": 8
            }
        ],
        "18": [
            {
                "method_signature": "org.joda.time.chrono.GJChronology:getDateTimeMillis(IIIIIII)J",
                "type": "getter",
                "lines_of_code": 5
            }
        ],
        "24": []
    }
}