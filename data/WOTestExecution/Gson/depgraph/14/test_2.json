{
    "bug_id": 14,
    "test_id": 2,
    "test_name": "com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveResolveSimple",
    "test_body": "public void testRecursiveResolveSimple() {\nTypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);\nassertNotNull(adapter);\n}\n",
    "stack_trace": "java.lang.StackOverflowError\nat java.lang.String.lastIndexOf(String.java:1611)\nat sun.reflect.misc.ReflectUtil.isNonPublicProxyClass(ReflectUtil.java:287)\nat sun.reflect.misc.ReflectUtil.checkPackageAccess(ReflectUtil.java:165)\nat sun.reflect.generics.reflectiveObjects.TypeVariableImpl.getGenericDeclaration(TypeVariableImpl.java:164)\nat sun.reflect.generics.reflectiveObjects.TypeVariableImpl.equals(TypeVariableImpl.java:189)\nat com.google.gson.internal.$Gson$Types.indexOf($Gson$Types.java:419)\nat com.google.gson.internal.$Gson$Types.resolveTypeVariable($Gson$Types.java:410)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:333)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)\nat com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.internal.$Gson$Types$WildcardTypeImpl:<init>([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V",
            "method_body": "public WildcardTypeImpl(Type[] upperBounds, Type[] lowerBounds) {\ncheckArgument(lowerBounds.length <= 1);\ncheckArgument(upperBounds.length == 1);\n\nif (lowerBounds.length == 1) {\ncheckNotNull(lowerBounds[0]);\ncheckNotPrimitive(lowerBounds[0]);\ncheckArgument(upperBounds[0] == Object.class);\nthis.lowerBound = canonicalize(lowerBounds[0]);\nthis.upperBound = Object.class;\n\n} else {\ncheckNotNull(upperBounds[0]);\ncheckNotPrimitive(upperBounds[0]);\nthis.lowerBound = null;\nthis.upperBound = canonicalize(upperBounds[0]);\n}\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:getGenericSupertype(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;",
            "method_body": "static Type getGenericSupertype(Type context, Class<?> rawType, Class<?> toResolve) {\nif (toResolve == rawType) {\nreturn context;\n}\n\n// we skip searching through interfaces if unknown is an interface\nif (toResolve.isInterface()) {\nClass<?>[] interfaces = rawType.getInterfaces();\nfor (int i = 0, length = interfaces.length; i < length; i++) {\nif (interfaces[i] == toResolve) {\nreturn rawType.getGenericInterfaces()[i];\n} else if (toResolve.isAssignableFrom(interfaces[i])) {\nreturn getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n}\n}\n}\n\n// check our supertypes\nif (!rawType.isInterface()) {\nwhile (rawType != Object.class) {\nClass<?> rawSupertype = rawType.getSuperclass();\nif (rawSupertype == toResolve) {\nreturn rawType.getGenericSuperclass();\n} else if (toResolve.isAssignableFrom(rawSupertype)) {\nreturn getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n}\nrawType = rawSupertype;\n}\n}\n\n// we can't resolve this further\nreturn toResolve;\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:supertypeOf(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;",
            "method_body": "public static WildcardType supertypeOf(Type bound) {\nType[] lowerBounds;\nlowerBounds = new Type[] { bound };\nreturn new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:resolveTypeVariable(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;",
            "method_body": "static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {\nClass<?> declaredByRaw = declaringClassOf(unknown);\n\n// we can't reduce this further\nif (declaredByRaw == null) {\nreturn unknown;\n}\n\nType declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);\nif (declaredBy instanceof ParameterizedType) {\nint index = indexOf(declaredByRaw.getTypeParameters(), unknown);\nreturn ((ParameterizedType) declaredBy).getActualTypeArguments()[index];\n}\n\nreturn unknown;\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:canonicalize(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;",
            "method_body": "public static Type canonicalize(Type type) {\nif (type instanceof Class) {\nClass<?> c = (Class<?>) type;\nreturn c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;\n\n} else if (type instanceof ParameterizedType) {\nParameterizedType p = (ParameterizedType) type;\nreturn new ParameterizedTypeImpl(p.getOwnerType(),\np.getRawType(), p.getActualTypeArguments());\n\n} else if (type instanceof GenericArrayType) {\nGenericArrayType g = (GenericArrayType) type;\nreturn new GenericArrayTypeImpl(g.getGenericComponentType());\n\n} else if (type instanceof WildcardType) {\nWildcardType w = (WildcardType) type;\nreturn new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());\n\n} else {\n// type is either serializable as-is or unsupported\nreturn type;\n}\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.Gson:<init>(Lcom/google/gson/internal/Excluder;Lcom/google/gson/FieldNamingStrategy;Ljava/util/Map;ZZZZZZZLcom/google/gson/LongSerializationPolicy;Ljava/util/List;)V",
            "method_body": "Gson(final Excluder excluder, final FieldNamingStrategy fieldNamingStrategy,\nfinal Map<Type, InstanceCreator<?>> instanceCreators, boolean serializeNulls,\nboolean complexMapKeySerialization, boolean generateNonExecutableGson, boolean htmlSafe,\nboolean prettyPrinting, boolean lenient, boolean serializeSpecialFloatingPointValues,\nLongSerializationPolicy longSerializationPolicy,\nList<TypeAdapterFactory> typeAdapterFactories) {\nthis.constructorConstructor = new ConstructorConstructor(instanceCreators);\nthis.excluder = excluder;\nthis.fieldNamingStrategy = fieldNamingStrategy;\nthis.serializeNulls = serializeNulls;\nthis.generateNonExecutableJson = generateNonExecutableGson;\nthis.htmlSafe = htmlSafe;\nthis.prettyPrinting = prettyPrinting;\nthis.lenient = lenient;\n\nList<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>();\n\n// built-in type adapters that cannot be overridden\nfactories.add(TypeAdapters.JSON_ELEMENT_FACTORY);\nfactories.add(ObjectTypeAdapter.FACTORY);\n\n// the excluder must precede all adapters that handle user-defined types\nfactories.add(excluder);\n\n// user's type adapters\nfactories.addAll(typeAdapterFactories);\n\n// type adapters for basic platform types\nfactories.add(TypeAdapters.STRING_FACTORY);\nfactories.add(TypeAdapters.INTEGER_FACTORY);\nfactories.add(TypeAdapters.BOOLEAN_FACTORY);\nfactories.add(TypeAdapters.BYTE_FACTORY);\nfactories.add(TypeAdapters.SHORT_FACTORY);\nTypeAdapter<Number> longAdapter = longAdapter(longSerializationPolicy);\nfactories.add(TypeAdapters.newFactory(long.class, Long.class, longAdapter));\nfactories.add(TypeAdapters.newFactory(double.class, Double.class,\ndoubleAdapter(serializeSpecialFloatingPointValues)));\nfactories.add(TypeAdapters.newFactory(float.class, Float.class,\nfloatAdapter(serializeSpecialFloatingPointValues)));\nfactories.add(TypeAdapters.NUMBER_FACTORY);\nfactories.add(TypeAdapters.ATOMIC_INTEGER_FACTORY);\nfactories.add(TypeAdapters.ATOMIC_BOOLEAN_FACTORY);\nfactories.add(TypeAdapters.newFactory(AtomicLong.class, atomicLongAdapter(longAdapter)));\nfactories.add(TypeAdapters.newFactory(AtomicLongArray.class, atomicLongArrayAdapter(longAdapter)));\nfactories.add(TypeAdapters.ATOMIC_INTEGER_ARRAY_FACTORY);\nfactories.add(TypeAdapters.CHARACTER_FACTORY);\nfactories.add(TypeAdapters.STRING_BUILDER_FACTORY);\nfactories.add(TypeAdapters.STRING_BUFFER_FACTORY);\nfactories.add(TypeAdapters.newFactory(BigDecimal.class, TypeAdapters.BIG_DECIMAL));\nfactories.add(TypeAdapters.newFactory(BigInteger.class, TypeAdapters.BIG_INTEGER));\nfactories.add(TypeAdapters.URL_FACTORY);\nfactories.add(TypeAdapters.URI_FACTORY);\nfactories.add(TypeAdapters.UUID_FACTORY);\nfactories.add(TypeAdapters.CURRENCY_FACTORY);\nfactories.add(TypeAdapters.LOCALE_FACTORY);\nfactories.add(TypeAdapters.INET_ADDRESS_FACTORY);\nfactories.add(TypeAdapters.BIT_SET_FACTORY);\nfactories.add(DateTypeAdapter.FACTORY);\nfactories.add(TypeAdapters.CALENDAR_FACTORY);\nfactories.add(TimeTypeAdapter.FACTORY);\nfactories.add(SqlDateTypeAdapter.FACTORY);\nfactories.add(TypeAdapters.TIMESTAMP_FACTORY);\nfactories.add(ArrayTypeAdapter.FACTORY);\nfactories.add(TypeAdapters.CLASS_FACTORY);\n\n// type adapters for composite and user-defined types\nfactories.add(new CollectionTypeAdapterFactory(constructorConstructor));\nfactories.add(new MapTypeAdapterFactory(constructorConstructor, complexMapKeySerialization));\nthis.jsonAdapterFactory = new JsonAdapterAnnotationTypeAdapterFactory(constructorConstructor);\nfactories.add(jsonAdapterFactory);\nfactories.add(TypeAdapters.ENUM_FACTORY);\nfactories.add(new ReflectiveTypeAdapterFactory(\nconstructorConstructor, fieldNamingStrategy, excluder, jsonAdapterFactory));\n\nthis.factories = Collections.unmodifiableList(factories);\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:declaringClassOf(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;",
            "method_body": "private static Class<?> declaringClassOf(TypeVariable<?> typeVariable) {\nGenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();\nreturn genericDeclaration instanceof Class\n? (Class<?>) genericDeclaration\n: null;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:indexOf([Ljava/lang/Object;Ljava/lang/Object;)I",
            "method_body": "private static int indexOf(Object[] array, Object toFind) {\nfor (int i = 0, length = array.length; i < length; i++) {\nif (toFind.equals(array[i])) {\nreturn i;\n}\n}\nthrow new NoSuchElementException();\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:<clinit>()V",
            "method_body": "static final Type[] EMPTY_TYPE_ARRAY = new Type[] {};\nstatic final Type[] EMPTY_TYPE_ARRAY = new Type[] {};",
            "method_id": 8
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:checkNotPrimitive(Ljava/lang/reflect/Type;)V",
            "method_body": "static void checkNotPrimitive(Type type) {\ncheckArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:hashCodeOrZero(Ljava/lang/Object;)I",
            "method_body": "static int hashCodeOrZero(Object o) {\nreturn o != null ? o.hashCode() : 0;\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:newParameterizedTypeWithOwner(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;",
            "method_body": "public static ParameterizedType newParameterizedTypeWithOwner(\nType ownerType, Type rawType, Type... typeArguments) {\nreturn new ParameterizedTypeImpl(ownerType, rawType, typeArguments);\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:<init>(Ljava/lang/reflect/Type;)V",
            "method_body": "TypeToken(Type type) {\nthis.type = $Gson$Types.canonicalize($Gson$Preconditions.checkNotNull(type));\nthis.rawType = (Class<? super T>) $Gson$Types.getRawType(this.type);\nthis.hashCode = this.type.hashCode();\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.google.gson.Gson:<init>()V",
            "method_body": "public Gson() {\nthis(Excluder.DEFAULT, FieldNamingPolicy.IDENTITY,\nCollections.<Type, InstanceCreator<?>>emptyMap(), DEFAULT_SERIALIZE_NULLS,\nDEFAULT_COMPLEX_MAP_KEYS, DEFAULT_JSON_NON_EXECUTABLE, DEFAULT_ESCAPE_HTML,\nDEFAULT_PRETTY_PRINT, DEFAULT_LENIENT, DEFAULT_SPECIALIZE_FLOAT_VALUES,\nLongSerializationPolicy.DEFAULT, Collections.<TypeAdapterFactory>emptyList());\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.google.gson.Gson:getAdapter(Ljava/lang/Class;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public <T> TypeAdapter<T> getAdapter(Class<T> type) {\nreturn getAdapter(TypeToken.get(type));\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:get(Ljava/lang/Class;)Lcom/google/gson/reflect/TypeToken;",
            "method_body": "public static <T> TypeToken<T> get(Class<T> type) {\nreturn new TypeToken<T>(type);\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:get(Ljava/lang/reflect/Type;)Lcom/google/gson/reflect/TypeToken;",
            "method_body": "public static TypeToken<?> get(Type type) {\nreturn new TypeToken<Object>(type);\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Preconditions:checkArgument(Z)V",
            "method_body": "public static void checkArgument(boolean condition) {\nif (!condition) {\nthrow new IllegalArgumentException();\n}\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Preconditions:checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public static <T> T checkNotNull(T obj) {\nif (obj == null) {\nthrow new NullPointerException();\n}\nreturn obj;\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:<init>(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V",
            "method_body": "public ParameterizedTypeImpl(Type ownerType, Type rawType, Type... typeArguments) {\n// require an owner type if the raw type needs it\nif (rawType instanceof Class<?>) {\nClass<?> rawTypeAsClass = (Class<?>) rawType;\nboolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n|| rawTypeAsClass.getEnclosingClass() == null;\ncheckArgument(ownerType != null || isStaticOrTopLevelClass);\n}\n\nthis.ownerType = ownerType == null ? null : canonicalize(ownerType);\nthis.rawType = canonicalize(rawType);\nthis.typeArguments = typeArguments.clone();\nfor (int t = 0, length = this.typeArguments.length; t < length; t++) {\ncheckNotNull(this.typeArguments[t]);\ncheckNotPrimitive(this.typeArguments[t]);\nthis.typeArguments[t] = canonicalize(this.typeArguments[t]);\n}\n}",
            "method_id": 19
        },
        {
            "method_signature": "com.google.gson.FieldNamingPolicy$1:translateName(Ljava/lang/reflect/Field;)Ljava/lang/String;",
            "method_body": "@Override public String translateName(Field f) {\nreturn f.getName();\n}",
            "method_id": 20
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:getFieldNames(Ljava/lang/reflect/Field;)Ljava/util/List;",
            "method_body": "private List<String> getFieldNames(Field f) {\nSerializedName annotation = f.getAnnotation(SerializedName.class);\nif (annotation == null) {\nString name = fieldNamingPolicy.translateName(f);\nreturn Collections.singletonList(name);\n}\n\nString serializedName = annotation.value();\nString[] alternates = annotation.alternate();\nif (alternates.length == 0) {\nreturn Collections.singletonList(serializedName);\n}\n\nList<String> fieldNames = new ArrayList<String>(alternates.length + 1);\nfieldNames.add(serializedName);\nfor (String alternate : alternates) {\nfieldNames.add(alternate);\n}\nreturn fieldNames;\n}",
            "method_id": 21
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:createBoundField(Lcom/google/gson/Gson;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;ZZ)Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory$BoundField;",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal Gson context, final Field field, final String name,\nfinal TypeToken<?> fieldType, boolean serialize, boolean deserialize) {\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\n// special casing primitives here saves ~5% on Android...\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = jsonAdapterFactory.getTypeAdapter(\nconstructorConstructor, context, fieldType, annotation);\n}\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\n\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\n@SuppressWarnings({\"unchecked\", \"rawtypes\"}) // the type adapter and field type always agree\n@Override void write(JsonWriter writer, Object value)\nthrows IOException, IllegalAccessException {\nObject fieldValue = field.get(value);\nTypeAdapter t = jsonAdapterPresent ? typeAdapter\n: new TypeAdapterRuntimeTypeWrapper(context, typeAdapter, fieldType.getType());\nt.write(writer, fieldValue);\n}\n@Override void read(JsonReader reader, Object value)\nthrows IOException, IllegalAccessException {\nObject fieldValue = typeAdapter.read(reader);\nif (fieldValue != null || !isPrimitive) {\nfield.set(value, fieldValue);\n}\n}\n@Override public boolean writeField(Object value) throws IOException, IllegalAccessException {\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}\n};\n}",
            "method_id": 22
        },
        {
            "method_signature": "com.google.gson.internal.Primitives:isPrimitive(Ljava/lang/reflect/Type;)Z",
            "method_body": "public static boolean isPrimitive(Type type) {\nreturn PRIMITIVE_TO_WRAPPER_TYPE.containsKey(type);\n}",
            "method_id": 23
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:excludeField(Ljava/lang/reflect/Field;Z)Z",
            "method_body": "public boolean excludeField(Field f, boolean serialize) {\nreturn excludeField(f, serialize, excluder);\n}",
            "method_id": 24
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:excludeField(Ljava/lang/reflect/Field;ZLcom/google/gson/internal/Excluder;)Z",
            "method_body": "static boolean excludeField(Field f, boolean serialize, Excluder excluder) {\nreturn !excluder.excludeClass(f.getType(), serialize) && !excluder.excludeField(f, serialize);\n}",
            "method_id": 25
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {\nClass<? super T> raw = type.getRawType();\n\nif (!Object.class.isAssignableFrom(raw)) {\nreturn null; // it's a primitive!\n}\n\nObjectConstructor<T> constructor = constructorConstructor.get(type);\nreturn new Adapter<T>(constructor, getBoundFields(gson, type, raw));\n}",
            "method_id": 26
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$30:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nClass<? super T> rawType = typeToken.getRawType();\nif (!Enum.class.isAssignableFrom(rawType) || rawType == Enum.class) {\nreturn null;\n}\nif (!rawType.isEnum()) {\nrawType = rawType.getSuperclass(); // handle anonymous subclasses\n}\nreturn (TypeAdapter<T>) new EnumTypeAdapter(rawType);\n}",
            "method_id": 27
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType) {\nClass<? super T> rawType = targetType.getRawType();\nJsonAdapter annotation = rawType.getAnnotation(JsonAdapter.class);\nif (annotation == null) {\nreturn null;\n}\nreturn (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation);\n}",
            "method_id": 28
        },
        {
            "method_signature": "com.google.gson.internal.bind.MapTypeAdapterFactory:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nType type = typeToken.getType();\n\nClass<? super T> rawType = typeToken.getRawType();\nif (!Map.class.isAssignableFrom(rawType)) {\nreturn null;\n}\n\nClass<?> rawTypeOfSrc = $Gson$Types.getRawType(type);\nType[] keyAndValueTypes = $Gson$Types.getMapKeyAndValueTypes(type, rawTypeOfSrc);\nTypeAdapter<?> keyAdapter = getKeyAdapter(gson, keyAndValueTypes[0]);\nTypeAdapter<?> valueAdapter = gson.getAdapter(TypeToken.get(keyAndValueTypes[1]));\nObjectConstructor<T> constructor = constructorConstructor.get(typeToken);\n\n@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n// we don't define a type parameter for the key or value types\nTypeAdapter<T> result = new Adapter(gson, keyAndValueTypes[0], keyAdapter,\nkeyAndValueTypes[1], valueAdapter, constructor);\nreturn result;\n}",
            "method_id": 29
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor:get(Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/internal/ObjectConstructor;",
            "method_body": "public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) {\nfinal Type type = typeToken.getType();\nfinal Class<? super T> rawType = typeToken.getRawType();\n\n// first try an instance creator\n\n@SuppressWarnings(\"unchecked\") // types must agree\nfinal InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type);\nif (typeCreator != null) {\nreturn new ObjectConstructor<T>() {\n@Override public T construct() {\nreturn typeCreator.createInstance(type);\n}\n};\n}\n\n// Next try raw type match for instance creators\n@SuppressWarnings(\"unchecked\") // types must agree\nfinal InstanceCreator<T> rawTypeCreator =\n(InstanceCreator<T>) instanceCreators.get(rawType);\nif (rawTypeCreator != null) {\nreturn new ObjectConstructor<T>() {\n@Override public T construct() {\nreturn rawTypeCreator.createInstance(type);\n}\n};\n}\n\nObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType);\nif (defaultConstructor != null) {\nreturn defaultConstructor;\n}\n\nObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType);\nif (defaultImplementation != null) {\nreturn defaultImplementation;\n}\n\n// finally try unsafe\nreturn newUnsafeAllocator(type, rawType);\n}",
            "method_id": 30
        },
        {
            "method_signature": "com.google.gson.internal.Primitives:<clinit>()V",
            "method_body": "private static final Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;\n\n/** A map from wrapper types to their corresponding primitive types. */\nprivate static final Map<Class<?>, Class<?>> WRAPPER_TO_PRIMITIVE_TYPE;\n\n// Sad that we can't use a BiMap. :(\n\nstatic {\nMap<Class<?>, Class<?>> primToWrap = new HashMap<Class<?>, Class<?>>(16);\nMap<Class<?>, Class<?>> wrapToPrim = new HashMap<Class<?>, Class<?>>(16);\n\nadd(primToWrap, wrapToPrim, boolean.class, Boolean.class);\nadd(primToWrap, wrapToPrim, byte.class, Byte.class);\nadd(primToWrap, wrapToPrim, char.class, Character.class);\nadd(primToWrap, wrapToPrim, double.class, Double.class);\nadd(primToWrap, wrapToPrim, float.class, Float.class);\nadd(primToWrap, wrapToPrim, int.class, Integer.class);\nadd(primToWrap, wrapToPrim, long.class, Long.class);\nadd(primToWrap, wrapToPrim, short.class, Short.class);\nadd(primToWrap, wrapToPrim, void.class, Void.class);\n\nPRIMITIVE_TO_WRAPPER_TYPE = Collections.unmodifiableMap(primToWrap);\nWRAPPER_TO_PRIMITIVE_TYPE = Collections.unmodifiableMap(wrapToPrim);\n}",
            "method_id": 31
        },
        {
            "method_signature": "com.google.gson.internal.Primitives:add(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V",
            "method_body": "private static void add(Map<Class<?>, Class<?>> forward,\nMap<Class<?>, Class<?>> backward, Class<?> key, Class<?> value) {\nforward.put(key, value);\nbackward.put(value, key);\n}",
            "method_id": 32
        },
        {
            "method_signature": "com.google.gson.internal.bind.ArrayTypeAdapter$1:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nType type = typeToken.getType();\nif (!(type instanceof GenericArrayType || type instanceof Class && ((Class<?>) type).isArray())) {\nreturn null;\n}\n\nType componentType = $Gson$Types.getArrayComponentType(type);\nTypeAdapter<?> componentTypeAdapter = gson.getAdapter(TypeToken.get(componentType));\nreturn new ArrayTypeAdapter(\ngson, componentTypeAdapter, $Gson$Types.getRawType(componentType));\n}",
            "method_id": 33
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$26:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nif (typeToken.getRawType() != Timestamp.class) {\nreturn null;\n}\n\nfinal TypeAdapter<Date> dateTypeAdapter = gson.getAdapter(Date.class);\nreturn (TypeAdapter<T>) new TypeAdapter<Timestamp>() {\n@Override public Timestamp read(JsonReader in) throws IOException {\nDate date = dateTypeAdapter.read(in);\nreturn date != null ? new Timestamp(date.getTime()) : null;\n}\n\n@Override public void write(JsonWriter out, Timestamp value) throws IOException {\ndateTypeAdapter.write(out, value);\n}\n};\n}",
            "method_id": 34
        },
        {
            "method_signature": "com.google.gson.internal.bind.SqlDateTypeAdapter$1:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == java.sql.Date.class\n? (TypeAdapter<T>) new SqlDateTypeAdapter() : null;\n}",
            "method_id": 35
        },
        {
            "method_signature": "com.google.gson.internal.bind.TimeTypeAdapter$1:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == Time.class ? (TypeAdapter<T>) new TimeTypeAdapter() : null;\n}",
            "method_id": 36
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$34:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public static <TT> TypeAdapterFactory newFactoryForMultipleTypes(final Class<TT> base,\nfinal Class<? extends TT> sub, final TypeAdapter<? super TT> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nClass<? super T> rawType = typeToken.getRawType();\nreturn (rawType == base || rawType == sub) ? (TypeAdapter<T>) typeAdapter : null;\n}\n@Override public String toString() {\nreturn \"Factory[type=\" + base.getName()\n+ \"+\" + sub.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 37
        },
        {
            "method_signature": "com.google.gson.internal.bind.DateTypeAdapter$1:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == Date.class ? (TypeAdapter<T>) new DateTypeAdapter() : null;\n}",
            "method_id": 38
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:getType()Ljava/lang/reflect/Type;",
            "method_body": "public final Type getType() {\nreturn type;\n}",
            "method_id": 39
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$33:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public static <TT> TypeAdapterFactory newFactory(\nfinal Class<TT> unboxed, final Class<TT> boxed, final TypeAdapter<? super TT> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nClass<? super T> rawType = typeToken.getRawType();\nreturn (rawType == unboxed || rawType == boxed) ? (TypeAdapter<T>) typeAdapter : null;\n}\n@Override public String toString() {\nreturn \"Factory[type=\" + boxed.getName()\n+ \"+\" + unboxed.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 40
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$32:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public static <TT> TypeAdapterFactory newFactory(\nfinal Class<TT> type, final TypeAdapter<TT> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == type ? (TypeAdapter<T>) typeAdapter : null;\n}\n@Override public String toString() {\nreturn \"Factory[type=\" + type.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 41
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public <T> TypeAdapter<T> create(final Gson gson, final TypeToken<T> type) {\nClass<?> rawType = type.getRawType();\nfinal boolean skipSerialize = excludeClass(rawType, true);\nfinal boolean skipDeserialize = excludeClass(rawType, false);\n\nif (!skipSerialize && !skipDeserialize) {\nreturn null;\n}\n\nreturn new TypeAdapter<T>() {\n/** The delegate is lazily created because it may not be needed, and creating it may fail. */\nprivate TypeAdapter<T> delegate;\n\n@Override public T read(JsonReader in) throws IOException {\nif (skipDeserialize) {\nin.skipValue();\nreturn null;\n}\nreturn delegate().read(in);\n}\n\n@Override public void write(JsonWriter out, T value) throws IOException {\nif (skipSerialize) {\nout.nullValue();\nreturn;\n}\ndelegate().write(out, value);\n}\n\nprivate TypeAdapter<T> delegate() {\nTypeAdapter<T> d = delegate;\nreturn d != null\n? d\n: (delegate = gson.getDelegateAdapter(Excluder.this, type));\n}\n};\n}",
            "method_id": 42
        },
        {
            "method_signature": "com.google.gson.internal.bind.ObjectTypeAdapter$1:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\nif (type.getRawType() == Object.class) {\nreturn (TypeAdapter<T>) new ObjectTypeAdapter(gson);\n}\nreturn null;\n}",
            "method_id": 43
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:isAnonymousOrLocal(Ljava/lang/Class;)Z",
            "method_body": "private boolean isAnonymousOrLocal(Class<?> clazz) {\nreturn !Enum.class.isAssignableFrom(clazz)\n&& (clazz.isAnonymousClass() || clazz.isLocalClass());\n}",
            "method_id": 44
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:excludeClass(Ljava/lang/Class;Z)Z",
            "method_body": "public boolean excludeClass(Class<?> clazz, boolean serialize) {\nif (version != Excluder.IGNORE_VERSIONS\n&& !isValidVersion(clazz.getAnnotation(Since.class), clazz.getAnnotation(Until.class))) {\nreturn true;\n}\n\nif (!serializeInnerClasses && isInnerClass(clazz)) {\nreturn true;\n}\n\nif (isAnonymousOrLocal(clazz)) {\nreturn true;\n}\n\nList<ExclusionStrategy> list = serialize ? serializationStrategies : deserializationStrategies;\nfor (ExclusionStrategy exclusionStrategy : list) {\nif (exclusionStrategy.shouldSkipClass(clazz)) {\nreturn true;\n}\n}\n\nreturn false;\n}",
            "method_id": 45
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:getRawType()Ljava/lang/Class;",
            "method_body": "public final Class<? super T> getRawType() {\nreturn rawType;\n}",
            "method_id": 46
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:hashCode()I",
            "method_body": "@Override public final int hashCode() {\nreturn this.hashCode;\n}",
            "method_id": 47
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$35:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public static <T1> TypeAdapterFactory newTypeHierarchyFactory(\nfinal Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\")\n@Override public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {\nfinal Class<? super T2> requestedType = typeToken.getRawType();\nif (!clazz.isAssignableFrom(requestedType)) {\nreturn null;\n}\nreturn (TypeAdapter<T2>) new TypeAdapter<T1>() {\n@Override public void write(JsonWriter out, T1 value) throws IOException {\ntypeAdapter.write(out, value);\n}\n\n@Override public T1 read(JsonReader in) throws IOException {\nT1 result = typeAdapter.read(in);\nif (result != null && !requestedType.isInstance(result)) {\nthrow new JsonSyntaxException(\"Expected a \" + requestedType.getName()\n+ \" but was \" + result.getClass().getName());\n}\nreturn result;\n}\n};\n}\n@Override public String toString() {\nreturn \"Factory[typeHierarchy=\" + clazz.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 48
        },
        {
            "method_signature": "com.google.gson.Gson:<clinit>()V",
            "method_body": "static final boolean DEFAULT_JSON_NON_EXECUTABLE = false;\nstatic final boolean DEFAULT_LENIENT = false;\nstatic final boolean DEFAULT_PRETTY_PRINT = false;\nstatic final boolean DEFAULT_ESCAPE_HTML = true;\nstatic final boolean DEFAULT_SERIALIZE_NULLS = false;\nstatic final boolean DEFAULT_COMPLEX_MAP_KEYS = false;\nstatic final boolean DEFAULT_SPECIALIZE_FLOAT_VALUES = false;\n\nprivate static final TypeToken<?> NULL_KEY_SURROGATE = TypeToken.get(Object.class);\nprivate static final String JSON_NON_EXECUTABLE_PREFIX = \")]}'\\n\";\n\n/**\n* This thread local guards against reentrant calls to getAdapter(). In\n* certain object graphs, creating an adapter for a type may recursively\n* require an adapter for the same type! Without intervention, the recursive\n* lookup would stack overflow. We cheat by returning a proxy type adapter.\n* The proxy is wired up once the initial adapter has been created.\n*/\nprivate final ThreadLocal<Map<TypeToken<?>, FutureTypeAdapter<?>>> calls\n= new ThreadLocal<Map<TypeToken<?>, FutureTypeAdapter<?>>>();\n\nprivate final Map<TypeToken<?>, TypeAdapter<?>> typeTokenCache = new ConcurrentHashMap<TypeToken<?>, TypeAdapter<?>>();\n\nprivate final List<TypeAdapterFactory> factories;\nprivate final ConstructorConstructor constructorConstructor;\n\nprivate final Excluder excluder;\nprivate final FieldNamingStrategy fieldNamingStrategy;\nprivate final boolean serializeNulls;\nprivate final boolean htmlSafe;\nprivate final boolean generateNonExecutableJson;\nprivate final boolean prettyPrinting;\nprivate final boolean lenient;\nprivate final JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory;\n\n/**\n* Constructs a Gson object with default configuration. The default configuration has the\n* following settings:\n* <ul>\n*   <li>The JSON generated by <code>toJson</code> methods is in compact representation. This\n*   means that all the unneeded white-space is removed. You can change this behavior with\n*   {@link GsonBuilder#setPrettyPrinting()}. </li>",
            "method_id": 49
        },
        {
            "method_signature": "com.google.gson.Gson:doubleAdapter(Z)Lcom/google/gson/TypeAdapter;",
            "method_body": "private TypeAdapter<Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\nif (serializeSpecialFloatingPointValues) {\nreturn TypeAdapters.DOUBLE;\n}\nreturn new TypeAdapter<Number>() {\n@Override public Double read(JsonReader in) throws IOException {\nif (in.peek() == JsonToken.NULL) {\nin.nextNull();\nreturn null;\n}\nreturn in.nextDouble();\n}\n@Override public void write(JsonWriter out, Number value) throws IOException {\nif (value == null) {\nout.nullValue();\nreturn;\n}\ndouble doubleValue = value.doubleValue();\ncheckValidFloatingPoint(doubleValue);\nout.value(value);\n}\n};\n}",
            "method_id": 50
        },
        {
            "method_signature": "com.google.gson.Gson:floatAdapter(Z)Lcom/google/gson/TypeAdapter;",
            "method_body": "private TypeAdapter<Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\nif (serializeSpecialFloatingPointValues) {\nreturn TypeAdapters.FLOAT;\n}\nreturn new TypeAdapter<Number>() {\n@Override public Float read(JsonReader in) throws IOException {\nif (in.peek() == JsonToken.NULL) {\nin.nextNull();\nreturn null;\n}\nreturn (float) in.nextDouble();\n}\n@Override public void write(JsonWriter out, Number value) throws IOException {\nif (value == null) {\nout.nullValue();\nreturn;\n}\nfloat floatValue = value.floatValue();\ncheckValidFloatingPoint(floatValue);\nout.value(value);\n}\n};\n}",
            "method_id": 51
        },
        {
            "method_signature": "com.google.gson.Gson:longAdapter(Lcom/google/gson/LongSerializationPolicy;)Lcom/google/gson/TypeAdapter;",
            "method_body": "private static TypeAdapter<Number> longAdapter(LongSerializationPolicy longSerializationPolicy) {\nif (longSerializationPolicy == LongSerializationPolicy.DEFAULT) {\nreturn TypeAdapters.LONG;\n}\nreturn new TypeAdapter<Number>() {\n@Override public Number read(JsonReader in) throws IOException {\nif (in.peek() == JsonToken.NULL) {\nin.nextNull();\nreturn null;\n}\nreturn in.nextLong();\n}\n@Override public void write(JsonWriter out, Number value) throws IOException {\nif (value == null) {\nout.nullValue();\nreturn;\n}\nout.value(value.toString());\n}\n};\n}",
            "method_id": 52
        },
        {
            "method_signature": "com.google.gson.Gson:atomicLongAdapter(Lcom/google/gson/TypeAdapter;)Lcom/google/gson/TypeAdapter;",
            "method_body": "private static TypeAdapter<AtomicLong> atomicLongAdapter(final TypeAdapter<Number> longAdapter) {\nreturn new TypeAdapter<AtomicLong>() {\n@Override public void write(JsonWriter out, AtomicLong value) throws IOException {\nlongAdapter.write(out, value.get());\n}\n@Override public AtomicLong read(JsonReader in) throws IOException {\nNumber value = longAdapter.read(in);\nreturn new AtomicLong(value.longValue());\n}\n}.nullSafe();\n}",
            "method_id": 53
        },
        {
            "method_signature": "com.google.gson.Gson:atomicLongArrayAdapter(Lcom/google/gson/TypeAdapter;)Lcom/google/gson/TypeAdapter;",
            "method_body": "private static TypeAdapter<AtomicLongArray> atomicLongArrayAdapter(final TypeAdapter<Number> longAdapter) {\nreturn new TypeAdapter<AtomicLongArray>() {\n@Override public void write(JsonWriter out, AtomicLongArray value) throws IOException {\nout.beginArray();\nfor (int i = 0, length = value.length(); i < length; i++) {\nlongAdapter.write(out, value.get(i));\n}\nout.endArray();\n}\n@Override public AtomicLongArray read(JsonReader in) throws IOException {\nList<Long> list = new ArrayList<Long>();\nin.beginArray();\nwhile (in.hasNext()) {\nlong value = longAdapter.read(in).longValue();\nlist.add(value);\n}\nin.endArray();\nint length = list.size();\nAtomicLongArray array = new AtomicLongArray(length);\nfor (int i = 0; i < length; ++i) {\narray.set(i, list.get(i));\n}\nreturn array;\n}\n}.nullSafe();\n}",
            "method_id": 54
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor:<init>(Ljava/util/Map;)V",
            "method_body": "public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {\nthis.instanceCreators = instanceCreators;\n}",
            "method_id": 55
        },
        {
            "method_signature": "com.google.gson.internal.bind.ObjectTypeAdapter:<clinit>()V",
            "method_body": "public static final TypeAdapterFactory FACTORY = new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\")\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\nif (type.getRawType() == Object.class) {\nreturn (TypeAdapter<T>) new ObjectTypeAdapter(gson);\n}\nreturn null;\n}\n};",
            "method_id": 56
        },
        {
            "method_signature": "com.google.gson.internal.bind.DateTypeAdapter:<clinit>()V",
            "method_body": "public static final TypeAdapterFactory FACTORY = new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == Date.class ? (TypeAdapter<T>) new DateTypeAdapter() : null;\n}\n};",
            "method_id": 57
        },
        {
            "method_signature": "com.google.gson.internal.bind.TimeTypeAdapter:<clinit>()V",
            "method_body": "public static final TypeAdapterFactory FACTORY = new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == Time.class ? (TypeAdapter<T>) new TimeTypeAdapter() : null;\n}\n};",
            "method_id": 58
        },
        {
            "method_signature": "com.google.gson.internal.bind.SqlDateTypeAdapter:<clinit>()V",
            "method_body": "public static final TypeAdapterFactory FACTORY = new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == java.sql.Date.class\n? (TypeAdapter<T>) new SqlDateTypeAdapter() : null;\n}\n};",
            "method_id": 59
        },
        {
            "method_signature": "com.google.gson.internal.bind.ArrayTypeAdapter:<clinit>()V",
            "method_body": "public static final TypeAdapterFactory FACTORY = new TypeAdapterFactory() {\n@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nType type = typeToken.getType();\nif (!(type instanceof GenericArrayType || type instanceof Class && ((Class<?>) type).isArray())) {\nreturn null;\n}\n\nType componentType = $Gson$Types.getArrayComponentType(type);\nTypeAdapter<?> componentTypeAdapter = gson.getAdapter(TypeToken.get(componentType));\nreturn new ArrayTypeAdapter(\ngson, componentTypeAdapter, $Gson$Types.getRawType(componentType));\n}\n};",
            "method_id": 60
        },
        {
            "method_signature": "com.google.gson.internal.bind.CollectionTypeAdapterFactory:<init>(Lcom/google/gson/internal/ConstructorConstructor;)V",
            "method_body": "public CollectionTypeAdapterFactory(ConstructorConstructor constructorConstructor) {\nthis.constructorConstructor = constructorConstructor;\n}",
            "method_id": 61
        },
        {
            "method_signature": "com.google.gson.internal.bind.MapTypeAdapterFactory:<init>(Lcom/google/gson/internal/ConstructorConstructor;Z)V",
            "method_body": "public MapTypeAdapterFactory(ConstructorConstructor constructorConstructor,\nboolean complexMapKeySerialization) {\nthis.constructorConstructor = constructorConstructor;\nthis.complexMapKeySerialization = complexMapKeySerialization;\n}",
            "method_id": 62
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:<init>(Lcom/google/gson/internal/ConstructorConstructor;)V",
            "method_body": "public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor) {\nthis.constructorConstructor = constructorConstructor;\n}",
            "method_id": 63
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:<init>(Lcom/google/gson/internal/ConstructorConstructor;Lcom/google/gson/FieldNamingStrategy;Lcom/google/gson/internal/Excluder;Lcom/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory;)V",
            "method_body": "public ReflectiveTypeAdapterFactory(ConstructorConstructor constructorConstructor,\nFieldNamingStrategy fieldNamingPolicy, Excluder excluder,\nJsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory) {\nthis.constructorConstructor = constructorConstructor;\nthis.fieldNamingPolicy = fieldNamingPolicy;\nthis.excluder = excluder;\nthis.jsonAdapterFactory = jsonAdapterFactory;\n}",
            "method_id": 64
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:<init>()V",
            "method_body": "private static final double IGNORE_VERSIONS = -1.0d;\npublic static final Excluder DEFAULT = new Excluder();\nprivate double version = IGNORE_VERSIONS;\nprivate int modifiers = Modifier.TRANSIENT | Modifier.STATIC;\nprivate boolean serializeInnerClasses = true;\nprivate List<ExclusionStrategy> serializationStrategies = Collections.emptyList();\nprivate List<ExclusionStrategy> deserializationStrategies = Collections.emptyList();\n}",
            "method_id": 65
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:<clinit>()V",
            "method_body": "private static final double IGNORE_VERSIONS = -1.0d;\npublic static final Excluder DEFAULT = new Excluder();\n\nprivate double version = IGNORE_VERSIONS;\nprivate int modifiers = Modifier.TRANSIENT | Modifier.STATIC;\nprivate boolean serializeInnerClasses = true;\nprivate boolean requireExpose;\nprivate List<ExclusionStrategy> serializationStrategies = Collections.emptyList();\nprivate List<ExclusionStrategy> deserializationStrategies = Collections.emptyList();\n\n@Override protected Excluder clone() {\ntry {\nreturn (Excluder) super.clone();\n} catch (CloneNotSupportedException e) {\nthrow new AssertionError(e);\n}\n}",
            "method_id": 66
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters:<clinit>()V",
            "method_body": "public static final TypeAdapter<Class> CLASS = new TypeAdapter<Class>() {\n@Override\npublic void write(JsonWriter out, Class value) throws IOException {\nthrow new UnsupportedOperationException(\"Attempted to serialize java.lang.Class: \"\n+ value.getName() + \". Forgot to register a type adapter?\");\n}\n@Override\npublic Class read(JsonReader in) throws IOException {\nthrow new UnsupportedOperationException(\n\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n}\n}.nullSafe();",
            "method_id": 67
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters:newFactory(Ljava/lang/Class;Lcom/google/gson/TypeAdapter;)Lcom/google/gson/TypeAdapterFactory;",
            "method_body": "public static <TT> TypeAdapterFactory newFactory(\nfinal Class<TT> type, final TypeAdapter<TT> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nreturn typeToken.getRawType() == type ? (TypeAdapter<T>) typeAdapter : null;\n}\n@Override public String toString() {\nreturn \"Factory[type=\" + type.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 68
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters:newFactory(Ljava/lang/Class;Ljava/lang/Class;Lcom/google/gson/TypeAdapter;)Lcom/google/gson/TypeAdapterFactory;",
            "method_body": "public static <TT> TypeAdapterFactory newFactory(\nfinal Class<TT> unboxed, final Class<TT> boxed, final TypeAdapter<? super TT> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nClass<? super T> rawType = typeToken.getRawType();\nreturn (rawType == unboxed || rawType == boxed) ? (TypeAdapter<T>) typeAdapter : null;\n}\n@Override public String toString() {\nreturn \"Factory[type=\" + boxed.getName()\n+ \"+\" + unboxed.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 69
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters:newFactoryForMultipleTypes(Ljava/lang/Class;Ljava/lang/Class;Lcom/google/gson/TypeAdapter;)Lcom/google/gson/TypeAdapterFactory;",
            "method_body": "public static <TT> TypeAdapterFactory newFactoryForMultipleTypes(final Class<TT> base,\nfinal Class<? extends TT> sub, final TypeAdapter<? super TT> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\") // we use a runtime check to make sure the 'T's equal\n@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nClass<? super T> rawType = typeToken.getRawType();\nreturn (rawType == base || rawType == sub) ? (TypeAdapter<T>) typeAdapter : null;\n}\n@Override public String toString() {\nreturn \"Factory[type=\" + base.getName()\n+ \"+\" + sub.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 70
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters:newTypeHierarchyFactory(Ljava/lang/Class;Lcom/google/gson/TypeAdapter;)Lcom/google/gson/TypeAdapterFactory;",
            "method_body": "public static <T1> TypeAdapterFactory newTypeHierarchyFactory(\nfinal Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {\nreturn new TypeAdapterFactory() {\n@SuppressWarnings(\"unchecked\")\n@Override public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {\nfinal Class<? super T2> requestedType = typeToken.getRawType();\nif (!clazz.isAssignableFrom(requestedType)) {\nreturn null;\n}\nreturn (TypeAdapter<T2>) new TypeAdapter<T1>() {\n@Override public void write(JsonWriter out, T1 value) throws IOException {\ntypeAdapter.write(out, value);\n}\n\n@Override public T1 read(JsonReader in) throws IOException {\nT1 result = typeAdapter.read(in);\nif (result != null && !requestedType.isInstance(result)) {\nthrow new JsonSyntaxException(\"Expected a \" + requestedType.getName()\n+ \" but was \" + result.getClass().getName());\n}\nreturn result;\n}\n};\n}\n@Override public String toString() {\nreturn \"Factory[typeHierarchy=\" + clazz.getName() + \",adapter=\" + typeAdapter + \"]\";\n}\n};\n}",
            "method_id": 71
        },
        {
            "method_signature": "com.google.gson.TypeAdapter:nullSafe()Lcom/google/gson/TypeAdapter;",
            "method_body": "public final TypeAdapter<T> nullSafe() {\nreturn new TypeAdapter<T>() {\n@Override public void write(JsonWriter out, T value) throws IOException {\nif (value == null) {\nout.nullValue();\n} else {\nTypeAdapter.this.write(out, value);\n}\n}\n@Override public T read(JsonReader reader) throws IOException {\nif (reader.peek() == JsonToken.NULL) {\nreader.nextNull();\nreturn null;\n}\nreturn TypeAdapter.this.read(reader);\n}\n};\n}",
            "method_id": 72
        }
    ]
}