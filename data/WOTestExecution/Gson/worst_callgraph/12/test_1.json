{
    "bug_id": 12,
    "test_id": 1,
    "test_name": "com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_emptyJsonObject",
    "test_body": "public void testSkipValue_emptyJsonObject() throws IOException {\nJsonTreeReader in = new JsonTreeReader(new JsonObject());\nin.skipValue();\nassertEquals(JsonToken.END_DOCUMENT, in.peek());\n}\n",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: -1\nat com.google.gson.internal.bind.JsonTreeReader.skipValue(JsonTreeReader.java:262)\nat com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_emptyJsonObject(JsonTreeReaderTest.java:29)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:popStack()Ljava/lang/Object;",
            "method_body": "private Object popStack() {\nObject result = stack[--stackSize];\nstack[stackSize] = null;\nreturn result;\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:peekStack()Ljava/lang/Object;",
            "method_body": "private Object peekStack() {\nreturn stack[stackSize - 1];\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:<clinit>()V",
            "method_body": "private static final Reader UNREADABLE_READER = new Reader() {\n@Override public int read(char[] buffer, int offset, int count) throws IOException {\nthrow new AssertionError();\n}\n@Override public void close() throws IOException {\nthrow new AssertionError();\n}\n};",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:<init>(Lcom/google/gson/JsonElement;)V",
            "method_body": "public JsonTreeReader(JsonElement element) {\nsuper(UNREADABLE_READER);\npush(element);\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:<clinit>()V",
            "method_body": "private static final Comparator<Comparable> NATURAL_ORDER = new Comparator<Comparable>() {\n};",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:<init>(Ljava/util/Comparator;)V",
            "method_body": "public LinkedTreeMap(Comparator<? super K> comparator) {\nthis.comparator = comparator != null\n? comparator\n: (Comparator) NATURAL_ORDER;\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.stream.JsonReader:<init>(Ljava/io/Reader;)V",
            "method_body": "public JsonReader(Reader in) {\nif (in == null) {\nthrow new NullPointerException(\"in == null\");\n}\nthis.in = in;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:peek()Lcom/google/gson/stream/JsonToken;",
            "method_body": "@Override public JsonToken peek() throws IOException {\nif (stackSize == 0) {\nreturn JsonToken.END_DOCUMENT;\n}\n\nObject o = peekStack();\nif (o instanceof Iterator) {\nboolean isObject = stack[stackSize - 2] instanceof JsonObject;\nIterator<?> iterator = (Iterator<?>) o;\nif (iterator.hasNext()) {\nif (isObject) {\nreturn JsonToken.NAME;\n} else {\npush(iterator.next());\nreturn peek();\n}\n} else {\nreturn isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;\n}\n} else if (o instanceof JsonObject) {\nreturn JsonToken.BEGIN_OBJECT;\n} else if (o instanceof JsonArray) {\nreturn JsonToken.BEGIN_ARRAY;\n} else if (o instanceof JsonPrimitive) {\nJsonPrimitive primitive = (JsonPrimitive) o;\nif (primitive.isString()) {\nreturn JsonToken.STRING;\n} else if (primitive.isBoolean()) {\nreturn JsonToken.BOOLEAN;\n} else if (primitive.isNumber()) {\nreturn JsonToken.NUMBER;\n} else {\nthrow new AssertionError();\n}\n} else if (o instanceof JsonNull) {\nreturn JsonToken.NULL;\n} else if (o == SENTINEL_CLOSED) {\nthrow new IllegalStateException(\"JsonReader is closed\");\n} else {\nthrow new AssertionError();\n}\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:push(Ljava/lang/Object;)V",
            "method_body": "private void push(Object newTop) {\nif (stackSize == stack.length) {\nObject[] newStack = new Object[stackSize * 2];\nint[] newPathIndices = new int[stackSize * 2];\nString[] newPathNames = new String[stackSize * 2];\nSystem.arraycopy(stack, 0, newStack, 0, stackSize);\nSystem.arraycopy(pathIndices, 0, newPathIndices, 0, stackSize);\nSystem.arraycopy(pathNames, 0, newPathNames, 0, stackSize);\nstack = newStack;\npathIndices = newPathIndices;\npathNames = newPathNames;\n}\nstack[stackSize++] = newTop;\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap$Node:<init>()V",
            "method_body": "Node() {\nkey = null;\nnext = prev = this;\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:<init>()V",
            "method_body": "public LinkedTreeMap() {\nthis((Comparator<? super K>) NATURAL_ORDER);\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.JsonObject:<init>()V",
            "method_body": "private final LinkedTreeMap<String, JsonElement> members =\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:skipValue()V",
            "method_body": "@Override public void skipValue() throws IOException {\nif (peek() == JsonToken.NAME) {\nnextName();\npathNames[stackSize - 2] = \"null\";\n} else {\npopStack();\npathNames[stackSize - 1] = \"null\";\n}\npathIndices[stackSize - 1]++;\n}",
            "method_id": 12
        }
    ]
}